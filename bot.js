import { session, Markup, Telegraf } from 'telegraf';
import { handleStock } from './handlers/stock.js';
import { handleWeather } from './handlers/weather.js';
import { getEnvVar } from './utils/getEnvVar.js';

const BOT_TOKEN = getEnvVar('BOT_TOKEN');

if (!BOT_TOKEN) {
  console.error('‚ùå BOT_TOKEN –Ω–µ –≤–∫–∞–∑–∞–Ω–æ –≤ .env');
  process.exit(1);
}

const bot = new Telegraf(BOT_TOKEN);

bot.use(session());

bot.start((ctx) => {
  ctx.session = {};
  ctx.reply(
    '–ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏, —â–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å:',
    Markup.keyboard([['üå¶ –ü–æ–≥–æ–¥–∞', 'üìà –ê–∫—Ü—ñ—ó NASDAQ']]).resize(),
  );
});

bot.hears('üå¶ –ü–æ–≥–æ–¥–∞', (ctx) => {
  ctx.session ??= {};
  ctx.session.mode = 'weather';
  ctx.session.step = 'waitingCity';
  ctx.reply('–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞ üåç');
});

bot.hears('üìà –ê–∫—Ü—ñ—ó NASDAQ', (ctx) => {
  ctx.session ??= {};
  ctx.session.mode = 'stocks';
  ctx.session.step = 'waitingCompany';
  ctx.reply('–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É –∫–æ–º–ø–∞–Ω—ñ—ó (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: Apple, Tesla):');
});

bot.on('text', async (ctx) => {
  const input = ctx.message.text.trim();
  const { mode, step } = ctx.session ?? {};

  console.log('Session:', ctx.session);

  if (mode === 'weather' && step === 'waitingCity') {
    ctx.session.step = null;
    await handleWeather(ctx, input);
  } else if (mode === 'stocks' && step === 'waitingCompany') {
    ctx.session.step = null;
    await handleStock(ctx, input);
  } else {
    ctx.reply('–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä–∏ –æ–ø—Ü—ñ—é –≤ –º–µ–Ω—é: üå¶ –∞–±–æ üìà');
  }
});

bot.launch();
console.log('‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ');
